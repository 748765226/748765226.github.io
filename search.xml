<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hadoop</title>
    <url>/2020/11/15/Hadoop%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="Hadoop教程"><a href="#Hadoop教程" class="headerlink" title="Hadoop教程"></a>Hadoop教程</h1><a id="more"></a>

<h2 id="第一部分：Java安装教程"><a href="#第一部分：Java安装教程" class="headerlink" title="第一部分：Java安装教程"></a>第一部分：Java安装教程</h2><h3 id="Hadoop-Java对应版本号"><a href="#Hadoop-Java对应版本号" class="headerlink" title="Hadoop Java对应版本号"></a>Hadoop Java对应版本号</h3><ul>
<li><p>Apache Hadoop 3.x 版本 现在只支持 Java 8</p>
</li>
<li><p>Apache Hadoop 从2.7.x 到 2.x 版本支持Java 7 and 8</p>
</li>
</ul>
<h3 id="下载JDK-8"><a href="#下载JDK-8" class="headerlink" title="下载JDK 8"></a>下载JDK 8</h3><p><a href="https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html">JDK 8</a></p>
<p>如果上面链接失效或者无法登陆，请移步<a href="https://media.githubusercontent.com/media/748765226/hadoop/main/jdk-8u271-linux-x64.tar.gz">JDK 8</a>下载</p>
<p> <img data-src="https://i.loli.net/2020/11/16/YoRk2V7CP5UXEDz.png"> </p>
<h3 id="将下载好的Java-8压缩包传进服务器，推荐使用sftp命令或者软件Xftp"><a href="#将下载好的Java-8压缩包传进服务器，推荐使用sftp命令或者软件Xftp" class="headerlink" title="将下载好的Java 8压缩包传进服务器，推荐使用sftp命令或者软件Xftp"></a>将下载好的Java 8压缩包传进服务器，推荐使用sftp命令或者软件Xftp</h3><p><img data-src="https://i.loli.net/2020/11/16/MY5UQVd8ykNuvLs.png"> </p>
<h3 id="进行解压"><a href="#进行解压" class="headerlink" title="进行解压"></a>进行解压</h3><p><img data-src="https://i.loli.net/2020/11/16/KP27owXC6UmWJZf.png"> </p>
<h3 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h3><p>1.在终端输入 <code>cd</code> 进入~目录，修改环境变量，输入<code>vi .bashrc</code> </p>
<p><img data-src="https://i.loli.net/2020/11/16/jI7VPwJuT2DLCmt.png"> </p>
<p>2.点击键盘 <code>i</code> 或者<code>insert</code> 在末行添加下列</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">export JAVA_HOME&#x3D;&#x2F;root&#x2F;jdk1.8.0_271&#x2F;</span><br><span class="line">export CLASSPATH&#x3D;.:$JAVA_HOME&#x2F;jre&#x2F;lib&#x2F;rt.jar:$JAVA_HOME&#x2F;lib&#x2F;dt.jar:$JAVA_HOME&#x2F;lib&#x2F;tools.jar</span><br><span class="line">export PATH&#x3D;$PATH:$JAVA_HOME&#x2F;bin</span><br><span class="line">#（！！！注意：JAVA_HOME的路径是你实际解压后的JDK的路径，千万别写错了）</span><br></pre></td></tr></table></figure>

<p>3.点击键盘<code>ESC</code>，输入<code>:wp </code>退出并保存文件</p>
<p><img data-src="https://i.loli.net/2020/11/16/7uyQSRsGNYaoAXp.png"> </p>
<p>4.终端输入<code>source .bashrc</code> #让设置的变量马上生效，否则得重启生效</p>
<p> <img data-src="https://i.loli.net/2020/11/16/ORxdSFcW2sYIhp6.png"> </p>
<h3 id="查看Java版本"><a href="#查看Java版本" class="headerlink" title="查看Java版本"></a>查看Java版本</h3><p><img data-src="https://i.loli.net/2020/11/16/Yi6T3NJOWfthgIc.png"> </p>
<h2 id="第二部分：Hadoop单节点安装教程"><a href="#第二部分：Hadoop单节点安装教程" class="headerlink" title="第二部分：Hadoop单节点安装教程"></a>第二部分：Hadoop单节点安装教程</h2><h3 id="下载hadoop2-9-2"><a href="#下载hadoop2-9-2" class="headerlink" title="下载hadoop2.9.2"></a>下载hadoop2.9.2</h3><p> <a href="http://ftp.cuhk.edu.hk/pub/packages/apache.org/hadoop/common/">Hadoop下载</a></p>
<p><img data-src="https://i.loli.net/2020/11/16/HthS1TafLkOlBze.png"> </p>
<p>选择最下面那个</p>
<p><img data-src="https://s3.ax1x.com/2020/11/23/DYiBa8.png"></p>
<h3 id="同理，利用Xftp-将下载好的文件上传到服务器"><a href="#同理，利用Xftp-将下载好的文件上传到服务器" class="headerlink" title="同理，利用Xftp 将下载好的文件上传到服务器"></a>同理，利用Xftp 将下载好的文件上传到服务器</h3><p><img data-src="https://i.loli.net/2020/11/16/kNra1E6F4tsXUjq.png"> </p>
<p><strong>输入<code>tar -xzvf hadoop-2.9.2.tar.gz</code></strong></p>
<p> <img data-src="https://i.loli.net/2020/11/16/A2mcVxaRQe76sGC.png"> </p>
<h3 id="配置hadoop"><a href="#配置hadoop" class="headerlink" title="配置hadoop"></a>配置hadoop</h3><h4 id="创建namenode和datanode目录"><a href="#创建namenode和datanode目录" class="headerlink" title="创建namenode和datanode目录"></a>创建namenode和datanode目录</h4><ul>
<li><p><code>mkdir -p hadoop_tmp/hdfs/namenode </code></p>
</li>
<li><p><code>mkdir -p hadoop_tmp/hdfs/datanode</code></p>
</li>
</ul>
<p><img data-src="https://i.loli.net/2020/11/16/6uUMZC1VpRyLlI8.png" alt="img"> </p>
<h4 id="配置hadoop环境变量"><a href="#配置hadoop环境变量" class="headerlink" title="配置hadoop环境变量"></a>配置hadoop环境变量</h4><p>1.终端输入<code>vi ~/.bashrc</code></p>
<p>2.首先修改JAVA_HOME，由于上面配置java环境变量已经设置，所以将其更改一下，这里很关键，一定要操作对</p>
<p>3.插入下列代码配置hadoop环境变量</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">export HADOOP_HOME&#x3D;&#x2F;root&#x2F;hadoop-2.9.2</span><br><span class="line">export PATH&#x3D;$PATH:$HADOOP_HOME&#x2F;bin</span><br><span class="line">export PATH&#x3D;$PATH:$HADOOP_HOME&#x2F;sbin</span><br><span class="line">export HADOOP_MAPRED_HOME&#x3D;$HADOOP_HOME</span><br><span class="line">export HADOOP_COMMON_HOME&#x3D;$HADOOP_HOME</span><br><span class="line">export HADOOP_HDFS_HOME&#x3D;$HADOOP_HOME</span><br><span class="line">export YARN_HOME&#x3D;$HADOOP_HOME</span><br><span class="line">export HADOOP_COMMON_LIB_NATIVE_DIR&#x3D;$HADOOP_HOME&#x2F;lib&#x2F;native</span><br><span class="line">export HADOOP_OPTS&#x3D;&quot;-Djava.library.path&#x3D;$HADOOP_HOME&#x2F;lib&quot;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://i.loli.net/2020/11/16/sJwmpYCGlt3TEfd.png"> </p>
<p>4.键盘<code>ESC</code>输入<code>:wq</code>保存退出，并且输入<code>source ~/.bashrc</code>使其生效</p>
<p>5.输入<code>vi etc/hadoop/hadoop-env.sh</code> </p>
<p>修改JAVA_HOME<code> export JAVA_HOME=/root/jdk1.8.0_271/</code>  </p>
<p>#（！！！注意：JAVA_HOME的路径是你实际解压后的JDK的路径，千万别写错了）</p>
<p><img data-src="https://i.loli.net/2020/11/16/2nyCsK4vkjqYpHI.png"> </p>
<h4 id="更新hadoop配置文件（四个文件）"><a href="#更新hadoop配置文件（四个文件）" class="headerlink" title="更新hadoop配置文件（四个文件）"></a>更新hadoop配置文件（四个文件）</h4><p>1.终端进入<code>cd ~/hadoop-2.9.2</code>(hadoop解压后的地址) 修改<code>vi etc/hadoop/core-site.xml</code></p>
<p><img data-src="https://i.loli.net/2020/11/16/aKDMLRBiNZCzf9J.png"> </p>
<p>2.插入下面代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#Add those lines in the configuration section</span><br><span class="line">&lt;property&gt;</span><br><span class="line">  &lt;name&gt;fs.default.name&lt;&#x2F;name&gt;</span><br><span class="line">  &lt;value&gt;hdfs:&#x2F;&#x2F;localhost:9000&lt;&#x2F;value&gt;</span><br><span class="line">&lt;&#x2F;property&gt;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://i.loli.net/2020/11/16/4AkaQDSVRPoGrvY.png"> </p>
<p><strong>如果上述vi修改麻烦可以在本地修改后通过xftp传到对应目录下覆盖</strong></p>
<p><img data-src="https://i.loli.net/2020/11/16/bqVUe4ioChr3vI1.png"> </p>
<p><strong>剩下三个文件同理这里就不一一赘述，贴上需要修改的文件和代码</strong></p>
<p>第二个文件： hdfs-site.xml  </p>
<p>注：截图红框地址的刚才创建的namenode和datanode的地址，记得修改成自己的</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#Add those lines in the configuration section</span><br><span class="line">&lt;property&gt;</span><br><span class="line">      &lt;name&gt;dfs.replication&lt;&#x2F;name&gt;</span><br><span class="line">      &lt;value&gt;1&lt;&#x2F;value&gt;</span><br><span class="line"> &lt;&#x2F;property&gt;</span><br><span class="line"> &lt;property&gt;</span><br><span class="line">      &lt;name&gt;dfs.namenode.name.dir&lt;&#x2F;name&gt;</span><br><span class="line">      &lt;value&gt;file:&#x2F;home&#x2F;hduser&#x2F;hadoop_tmp&#x2F;hdfs&#x2F;namenode&lt;&#x2F;value&gt;</span><br><span class="line"> &lt;&#x2F;property&gt;</span><br><span class="line"> &lt;property&gt;</span><br><span class="line">      &lt;name&gt;dfs.datanode.data.dir&lt;&#x2F;name&gt;</span><br><span class="line">      &lt;value&gt;file:&#x2F;home&#x2F;hduser&#x2F;hadoop_tmp&#x2F;hdfs&#x2F;datanode&lt;&#x2F;value&gt;</span><br><span class="line"> &lt;&#x2F;property&gt;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://i.loli.net/2020/11/16/bl4APa1xcqD8LSn.png"> </p>
<p>第三个文件： yarn-site.xml </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#Add those lines in the configuration section</span><br><span class="line">&lt;property&gt;</span><br><span class="line">      &lt;name&gt;yarn.nodemanager.aux-services&lt;&#x2F;name&gt;</span><br><span class="line">      &lt;value&gt;mapreduce_shuffle&lt;&#x2F;value&gt;</span><br><span class="line">&lt;&#x2F;property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">      &lt;name&gt;yarn.nodemanager.aux-services.mapreduce.shuffle.class&lt;&#x2F;name&gt;</span><br><span class="line">      &lt;value&gt;org.apache.hadoop.mapred.ShuffleHandler&lt;&#x2F;value&gt;</span><br><span class="line">&lt;&#x2F;property&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img data-src="https://i.loli.net/2020/11/16/pikKlZ3sdJXmaFb.png"> </p>
<p>第四个文件： mapred-site.xml </p>
<p>这个文件需要先进入<code>cd hadoop-2.9.2</code>执行<code>cp etc/hadoop/mapred-site.xml.template etc/hadoop/mapred-site.xml </code></p>
<p>然后添加下列代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#Add those lines in the configuration section</span><br><span class="line">&lt;property&gt;</span><br><span class="line">      &lt;name&gt;mapreduce.framework.name&lt;&#x2F;name&gt;</span><br><span class="line">      &lt;value&gt;yarn&lt;&#x2F;value&gt;</span><br><span class="line">&lt;&#x2F;property&gt;</span><br></pre></td></tr></table></figure>

<p> <img data-src="https://s3.ax1x.com/2020/11/16/Dk1R3T.png"> </p>
<h3 id="禁用IPv6"><a href="#禁用IPv6" class="headerlink" title="禁用IPv6"></a>禁用IPv6</h3><p><strong>PS：为何要禁用</strong>（参考<a href="https://cwiki.apache.org/confluence/display/HADOOP2/HadoopIPv6">wiki</a>）</p>
<p>输入 <code>sudo vi /etc/sysctl.conf  </code>插入下列</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#Append the following lines at the end of the file</span><br><span class="line">net.ipv6.conf.all.disable_ipv6 &#x3D; 1</span><br><span class="line">net.ipv6.conf.default.disable_ipv6 &#x3D; 1</span><br><span class="line">net.ipv6.conf.lo.disable_ipv6 &#x3D; 1</span><br></pre></td></tr></table></figure>

<p><img data-src="https://i.loli.net/2020/11/16/fZW1xQ3bpSMlsuE.png"> </p>
<h3 id="格式化namenode"><a href="#格式化namenode" class="headerlink" title="格式化namenode"></a>格式化namenode</h3><p>终端输入 <code>hdfs namenode -format </code></p>
<p> <img data-src="https://s3.ax1x.com/2020/11/16/Dk3nVs.png"> </p>
<h3 id="开启hadoop分布式文件系统"><a href="#开启hadoop分布式文件系统" class="headerlink" title="开启hadoop分布式文件系统"></a>开启hadoop分布式文件系统</h3><p>终端输入<code>start-dfs.sh</code></p>
<p>如果没有设置ssh 密钥对的话要输入密码登录，想要免密登录见下个部分 <img data-src="https://s3.ax1x.com/2020/11/16/Dk3ZrQ.png"> </p>
<h3 id="开启mapreduce"><a href="#开启mapreduce" class="headerlink" title="开启mapreduce"></a>开启mapreduce</h3><p>终端输入<code>start-yarn.sh </code></p>
<h3 id="开启作业历史服务"><a href="#开启作业历史服务" class="headerlink" title="开启作业历史服务"></a>开启作业历史服务</h3><p>终端输入<code>mr-jobhistory-daemon.sh start historyserver</code></p>
<h3 id="验证是否成功"><a href="#验证是否成功" class="headerlink" title="验证是否成功"></a>验证是否成功</h3><p>成功看到7个节点开启才算成功，如果某个节点或者任务没开启请移步日志</p>
<p> <img data-src="https://s3.ax1x.com/2020/11/16/Dk3AxS.png"> </p>
<h2 id="第三部分：Hadoop多节点搭建"><a href="#第三部分：Hadoop多节点搭建" class="headerlink" title="第三部分：Hadoop多节点搭建"></a>第三部分：Hadoop多节点搭建</h2><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>创建四台单节点，参考第二部分</p>
<h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>！！！在hadoop-2.9.2/etc/hadoop/目录内，没有特指四个节点都要进行一样的操作</p>
<h4 id="修改-core-site-xml"><a href="#修改-core-site-xml" class="headerlink" title="修改 core-site.xml"></a>修改 core-site.xml</h4><ul>
<li>输入 <code>vi etc/hadoop/core-site.xml</code> 更新localhost为master</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;configuration&gt;   </span><br><span class="line">	&lt;property&gt;     </span><br><span class="line">		&lt;name&gt;fs.default.name&lt;&#x2F;name&gt;     </span><br><span class="line">		&lt;value&gt;hdfs:&#x2F;&#x2F;master:9000&lt;&#x2F;value&gt;   </span><br><span class="line">	&lt;&#x2F;property&gt; </span><br><span class="line">&lt;&#x2F;configuration&gt; </span><br></pre></td></tr></table></figure>

<p> <img data-src="https://s3.ax1x.com/2020/11/22/DGVRH0.png"> </p>
<h4 id="修改-hdfs-site-xml"><a href="#修改-hdfs-site-xml" class="headerlink" title="修改 hdfs-site.xml"></a>修改 hdfs-site.xml</h4><ul>
<li><p>输入<code>vi etc/hadoop/hdfs-site.xml</code> 更新<code>dfs.replication</code>的value值为4</p>
<p><img data-src="https://s3.ax1x.com/2020/11/22/DGVfEV.png"> </p>
</li>
</ul>
<h4 id="修改-yarn-site-xml"><a href="#修改-yarn-site-xml" class="headerlink" title="修改 yarn-site.xml"></a>修改 yarn-site.xml</h4><ul>
<li>输入<code>vi etc/hadoop/yarn-site.xml</code> 添加下列</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;property&gt;       </span><br><span class="line">    &lt;name&gt;yarn.resourcemanager.resource-tracker.address&lt;&#x2F;name&gt;</span><br><span class="line">    &lt;value&gt;master:8025&lt;&#x2F;value&gt;        </span><br><span class="line">&lt;&#x2F;property&gt;  </span><br><span class="line">&lt;property&gt;       </span><br><span class="line">    &lt;name&gt;yarn.resourcemanager.scheduler.address&lt;&#x2F;name&gt;       </span><br><span class="line">    &lt;value&gt;master:8035&lt;&#x2F;value&gt; </span><br><span class="line">&lt;&#x2F;property&gt;       </span><br><span class="line">&lt;property&gt;       </span><br><span class="line">    &lt;name&gt;yarn.resourcemanager.address&lt;&#x2F;name&gt;       </span><br><span class="line">    &lt;value&gt;master:8050&lt;&#x2F;value&gt; </span><br><span class="line">&lt;&#x2F;property&gt; </span><br><span class="line">&lt;property&gt;             </span><br><span class="line">	&lt;name&gt;yarn.nodemanager.resource.memory-mb&lt;&#x2F;name&gt;             </span><br><span class="line">	&lt;value&gt;2048&lt;&#x2F;value&gt;      </span><br><span class="line">&lt;&#x2F;property&gt; </span><br></pre></td></tr></table></figure>

<p> <img data-src="https://s3.ax1x.com/2020/11/22/DGVhNT.png"> </p>
<h4 id="修改-mapred-site-xml"><a href="#修改-mapred-site-xml" class="headerlink" title="修改 mapred-site.xml"></a>修改 mapred-site.xml</h4><ul>
<li>输入vi etc/hadoop/mapred-site.xml`添加下列</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;property&gt;     </span><br><span class="line">    &lt;name&gt;mapreduce.job.tracker&lt;&#x2F;name&gt;     </span><br><span class="line">    &lt;value&gt;master:5431&lt;&#x2F;value&gt; </span><br><span class="line">&lt;&#x2F;property&gt; </span><br><span class="line">&lt;property&gt;             </span><br><span class="line">	&lt;name&gt;mapred.framework.name&lt;&#x2F;name&gt;             </span><br><span class="line">	&lt;value&gt;yarn&lt;&#x2F;value&gt;      </span><br><span class="line">&lt;&#x2F;property&gt;</span><br></pre></td></tr></table></figure>

<p> <img data-src="https://s3.ax1x.com/2020/11/22/DGV2Bq.png"> </p>
<h4 id="删除namenode和datanode"><a href="#删除namenode和datanode" class="headerlink" title="删除namenode和datanode"></a>删除namenode和datanode</h4><p>输入<code>rm -rf hadoop_tmp</code></p>
<h4 id="修改-masters"><a href="#修改-masters" class="headerlink" title="修改 masters"></a>修改 masters</h4><p>输入<code>vi etc/hadoop/masters</code> 添加 master</p>
<p> <img data-src="https://s3.ax1x.com/2020/11/22/DGVgun.png"> </p>
<h4 id="修改-slaves"><a href="#修改-slaves" class="headerlink" title="修改 slaves"></a>修改 slaves</h4><p>输入<code>vi etc/hadoop/slaves</code>   添加 slave1 slave2 slave3</p>
<p> <img data-src="https://s3.ax1x.com/2020/11/22/DGV44U.png"> </p>
<h4 id="修改主机名"><a href="#修改主机名" class="headerlink" title="修改主机名"></a>修改主机名</h4><p>输入<code>hostnamectl sethostname master</code> </p>
<p>注：在slave节点就对应改成slave 1，slave2，slave3，之后摁下<code>ctr+d</code>退出，重新ssh登录就可以看到了</p>
<h4 id="修改-etc-hosts"><a href="#修改-etc-hosts" class="headerlink" title="修改/etc/hosts"></a>修改/etc/hosts</h4><p>输入<code>vi /etc/hosts</code>    添加如下  </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">xxxx  master # xxxx对应master的内网ip</span><br><span class="line">xxxx  slave1 # slave1的内网ip</span><br><span class="line">xxxx  slave2 # slave2的内网ip</span><br><span class="line">xxxx  slave3 # slave3的内网ip</span><br><span class="line">#！！！如果这时候slave1 slave2 slave3没有创建，则先跳过，最后多节点搭完修改</span><br><span class="line">#！！！这里有个大坑，这里的ip一定要用内网，别问为什么，并且要将原来的内网ip注释掉</span><br></pre></td></tr></table></figure>

<p> <img data-src="https://s3.ax1x.com/2020/11/22/DGVICF.png"> </p>
<h3 id="免密登陆"><a href="#免密登陆" class="headerlink" title="免密登陆"></a>免密登陆</h3><p>！！！全部在master节点上执行</p>
<h4 id="密钥对生成"><a href="#密钥对生成" class="headerlink" title="密钥对生成"></a>密钥对生成</h4><p>首先在master节点上输入<code>ssh-keygen -t rsa</code>生成SSH秘钥对</p>
<p> <img data-src="https://s3.ax1x.com/2020/11/16/Dk3VKg.png"> </p>
<h4 id="设置权限"><a href="#设置权限" class="headerlink" title="设置权限"></a>设置权限</h4><p>在master上给用户设置读写.ssh文件夹权限</p>
<p>输入<code>chmod 600 ~/.ssh</code></p>
<h4 id="复制master公钥到三个slave上"><a href="#复制master公钥到三个slave上" class="headerlink" title="复制master公钥到三个slave上"></a>复制master公钥到三个slave上</h4><p>输入<code>scp .ssh/id_rsa.pub root@47.97.9.116 /root/.ssh/authorized_keys</code></p>
<p>！！！#@后面为对应slave公网ip <img data-src="https://s3.ax1x.com/2020/11/16/Dk3ebj.png"> </p>
<h4 id="测试免密登陆"><a href="#测试免密登陆" class="headerlink" title="测试免密登陆"></a>测试免密登陆</h4><p>测试之前确保master /etc/hosts已经添加了对应节点的内网IP</p>
<p>输入<code>ssh slave1</code> 测试</p>
<h3 id="检查配置和测试"><a href="#检查配置和测试" class="headerlink" title="检查配置和测试"></a>检查配置和测试</h3><h4 id="检查"><a href="#检查" class="headerlink" title="检查"></a>检查</h4><ul>
<li><code>hadoop-2.9.2/etc/hadoop/下的core-site.xml,dfs-site.xml,yarn-site.xml,mapred-site.xml</code></li>
<li><code>hadoop-2.9.2/etc/hadoop/下的masters和slaves</code></li>
<li><code>/etc/hosts下master和slave都要对应自己的内网ip</code></li>
</ul>
<h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><ul>
<li><code>hdfs namenode -format</code></li>
<li><code>    start-dfs.sh</code></li>
<li><code>start-yarn.sh</code></li>
</ul>
<p><img data-src="https://s3.ax1x.com/2020/11/22/DGV7v9.png"></p>
<h3 id="镜像搭多节点"><a href="#镜像搭多节点" class="headerlink" title="镜像搭多节点"></a>镜像搭多节点</h3><h4 id="搭建单节点"><a href="#搭建单节点" class="headerlink" title="搭建单节点"></a>搭建单节点</h4><ul>
<li>参考第二部分</li>
</ul>
<h4 id="修改配置文件-1"><a href="#修改配置文件-1" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><ul>
<li>参考上面一部分多节点搭建的</li>
</ul>
<h4 id="删除hadoop-tmp"><a href="#删除hadoop-tmp" class="headerlink" title="删除hadoop_tmp"></a>删除hadoop_tmp</h4><p>输入<code>rm -rf hadoop_tmp</code></p>
<h4 id="密钥对生成-1"><a href="#密钥对生成-1" class="headerlink" title="密钥对生成"></a>密钥对生成</h4><p>首先在master节点上输入<code>ssh-keygen -t rsa</code>生成SSH秘钥对</p>
<p> <img data-src="https://s3.ax1x.com/2020/11/16/Dk3VKg.png"> </p>
<h4 id="设置权限-1"><a href="#设置权限-1" class="headerlink" title="设置权限"></a>设置权限</h4><p>在master上给用户设置读写.ssh文件夹权限</p>
<p>输入<code>chmod 600 ~/.ssh</code></p>
<h4 id="创建镜像"><a href="#创建镜像" class="headerlink" title="创建镜像"></a>创建镜像</h4><p>将搭建好的master单节点成镜像，然后再利用此镜像创建三个slave实例</p>
<p> <img data-src="https://s3.ax1x.com/2020/11/22/DGVTgJ.png"> </p>
<p> <img data-src="https://s3.ax1x.com/2020/11/22/DGVo34.png"> </p>
<p> <img data-src="https://s3.ax1x.com/2020/11/22/DGVqD1.png"> </p>
<h4 id="修改hosts文件"><a href="#修改hosts文件" class="headerlink" title="修改hosts文件"></a>修改hosts文件</h4><p>启动三个slave节点和master节点修改hosts文件</p>
<p>输入<code>vi /etc/hosts</code>保证master和三个从节点对应自己的内网IP</p>
<p><img data-src="https://s3.ax1x.com/2020/11/22/DGVICF.png"></p>
<h4 id="删除known-hosts"><a href="#删除known-hosts" class="headerlink" title="删除known_hosts"></a>删除known_hosts</h4><p><code>rm ~/.ssh/known_hosts</code></p>
<h4 id="测试免密登陆-1"><a href="#测试免密登陆-1" class="headerlink" title="测试免密登陆"></a>测试免密登陆</h4><p>在master节点上测试，输入<code>ssh slave1</code>登陆上去<code>ctrl+d</code>退出</p>
<h4 id="测试多节点"><a href="#测试多节点" class="headerlink" title="测试多节点"></a>测试多节点</h4><ul>
<li><code>hdfs namenode -format</code></li>
<li><code>    start-dfs.sh</code></li>
<li><code>start-yarn.sh</code></li>
</ul>
<p>在master节点和slave节点上分别输入jps，查看结果。下图为正确结果，如果缺少则配置错误</p>
<p> <img data-src="https://s3.ax1x.com/2020/11/22/DGV7v9.png"> </p>
<h2 id="问题总结"><a href="#问题总结" class="headerlink" title="问题总结"></a>问题总结</h2><h3 id="单节点反馈问题总结"><a href="#单节点反馈问题总结" class="headerlink" title="单节点反馈问题总结"></a>单节点反馈问题总结</h3><ol>
<li>namenode界面访问端口问题</li>
</ol>
<ul>
<li>Hadoop 2.x namenode界面访问端口默认是50070</li>
<li>Hadoop 3.x namenode界面访问端口默认是9870</li>
</ul>
<p>2.关于JAVA的环境变量以及<code>JAVA_HOME=xxx</code>一定要配置对，这里是解压后的地址。如果是通过apt安装的，则需要自行去找一下安装目录，一般默认是<code>/usr/local/jvm/xxx</code>。</p>
<p>3.Hadoop的环境变量也要根据自己的安装版本和安装目录来修改。</p>
<p>4.Hadoop的四个主要配置文件代码格式要严格按照xml文件格式，并且也要根据具体的Hadoop版本和安装目录进行修改。</p>
<p>5.如果上述情况避开了，还遇到namenode或者datanode打不开的问题，请大家移步安装目录下logs找到对应节点的日志下拉到最底下，找到错误自行百度或者评论区留言。</p>
<h3 id="多节点反馈问题总结"><a href="#多节点反馈问题总结" class="headerlink" title="多节点反馈问题总结"></a>多节点反馈问题总结</h3><p>1.如果遇到</p>
<p><img data-src="https://s3.ax1x.com/2020/11/22/DGZiDI.png"> </p>
<p>则 修改要保存的路径<code>vi word_count.sh</code></p>
<p><img data-src="https://s3.ax1x.com/2020/11/22/DGZFbt.png"> </p>
<p>或者执行<code>hadoop dfs -rm -r /result</code> 将hadoop文件系统生成/result删除，就不会报错了</p>
<p>2.指定map和reduce的数量</p>
<p>输入<code>vi word_count.sh</code> 添加<code> -D mapred.reduce.tasks=10</code>指定reduce的数量，具体见<a href="http://hadoop.apache.org/docs/stable1/streaming.html#Streaming+Command+Options">这</a>和<a href="http://blog.itpub.net/15498/viewspace-2136139/">这</a></p>
<p><code>vi etc/hadoop/hdfs-site.xml</code> 值调大就可能减小map数量，调小就可能增大map数量</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;property&gt; </span><br><span class="line">	&lt;name&gt;dfs.block.size&lt;&#x2F;name&gt; </span><br><span class="line">	&lt;value&gt;256000000&lt;&#x2F;value&gt;    </span><br><span class="line">&lt;&#x2F;property&gt;</span><br></pre></td></tr></table></figure>

<p>但map的数量直接用这样的形式更改不一定生效，具体见<a href="https://blog.csdn.net/lylcore/article/details/9136555">这</a></p>
<p>完整命令<code>hadoop jar share/hadoop/mapreduce/hadoop-mapreduce-examples-2.9.2.jar wordcount -D mapred.reduce.tasks=10 /largefile /result2 </code></p>
<p>3.如何进行自定map和reduce函数</p>
<p>这里很详细就不再赘述，参考<a href="http://hadoop.apache.org/docs/stable1/streaming.html#Streaming+Command+Options">这</a></p>
<h2 id="终极大招"><a href="#终极大招" class="headerlink" title="终极大招"></a>终极大招</h2><h3 id="hosts相关的错"><a href="#hosts相关的错" class="headerlink" title="hosts相关的错"></a>hosts相关的错</h3><ul>
<li><code>rm -rf ~/.ssh/known_hosts</code> 在master节点</li>
<li><code>ssh slave1</code> 在master节点</li>
<li><code>ctrl+d</code></li>
<li><code>ssh slave2</code> 在master节点</li>
<li><code>ctrl+d</code></li>
<li><code>ssh slave3</code> 在master节点</li>
<li><code>ctrl+d</code></li>
<li><code>ssh master</code> 在master节点</li>
<li><code>ctrl+d</code></li>
</ul>
<h3 id="大招"><a href="#大招" class="headerlink" title="大招"></a>大招</h3><ul>
<li><code>stop-all.sh</code> master节点执行</li>
<li><code>rm -rf hadoop_tmp</code>  所有节点都要执行</li>
<li><code>rm -rf logs</code> 所有节点都要执行</li>
<li><code>hdfs namenode -format</code> 在master节点执行</li>
<li><code>start-all.sh</code> 在master节点执行</li>
</ul>
<h2 id="词频统计-以下操作都在master节点进行"><a href="#词频统计-以下操作都在master节点进行" class="headerlink" title="词频统计(以下操作都在master节点进行)"></a>词频统计(以下操作都在master节点进行)</h2><h3 id="下载小说集"><a href="#下载小说集" class="headerlink" title="下载小说集"></a>下载小说集</h3><p>输入<code>wget https://github.com/hupili/agile-ir/raw/master/data/Shakespeare.tar.gz</code></p>
<p>如果下载太慢，可以<a href="https://github.com/hupili/agile-ir/raw/master/data/Shakespeare.tar.gz">下载</a>到本地，然后通过xftp传进去服务器</p>
<h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><p>输入<code>tar-zxvf Shakespeare.tar.gz</code></p>
<h3 id="上传文件到hadoop文件系统上"><a href="#上传文件到hadoop文件系统上" class="headerlink" title="上传文件到hadoop文件系统上"></a>上传文件到hadoop文件系统上</h3><p>执行<code>hadoop dfs -copyFromLocal /root/hadoop-2.9.2/data /data</code></p>
<p>本条指令执行将本地/root/hadoop-2.9.2/下的data 复制到hadoop文件系统的 根目录<code>/</code>下 <img data-src="https://s3.ax1x.com/2020/11/22/DGVbuR.png"> </p>
<h3 id="查看上传结果"><a href="#查看上传结果" class="headerlink" title="查看上传结果"></a>查看上传结果</h3><p>输入<code>hadoop dfs -ls /data</code></p>
<p> <img data-src="https://s3.ax1x.com/2020/11/22/DGVXE6.png"> </p>
<h3 id="创建执行的脚本"><a href="#创建执行的脚本" class="headerlink" title="创建执行的脚本"></a>创建执行的脚本</h3><p>输入<code>vi word_count.sh</code> </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hadoop jar share&#x2F;hadoop&#x2F;mapreduce&#x2F;hadoop-mapreduce-examples-2.9.2.jar wordcount &#x2F;data &#x2F;result</span><br></pre></td></tr></table></figure>



<h3 id="执行wordcount"><a href="#执行wordcount" class="headerlink" title="执行wordcount"></a>执行wordcount</h3><p><code>bash word_count.sh</code></p>
<p> <img data-src="https://s3.ax1x.com/2020/11/22/DGVjUK.png"> </p>
<p> <img data-src="https://s3.ax1x.com/2020/11/22/DGVv4O.png"> </p>
<h3 id="查看结果"><a href="#查看结果" class="headerlink" title="查看结果"></a>查看结果</h3><ul>
<li><p><code>hadoop dfs -ls /result</code></p>
</li>
<li><p><code>hadoop dfs -cat /result/part-r-00000</code></p>
<p><img data-src="https://s3.ax1x.com/2020/11/22/DGVLHx.png"> </p>
</li>
</ul>
<h3 id="web查看"><a href="#web查看" class="headerlink" title="web查看"></a>web查看</h3><p>首先将端口打开</p>
<p> <img data-src="https://s3.ax1x.com/2020/11/22/DGVzCD.png"> </p>
<p> <img data-src="https://s3.ax1x.com/2020/11/22/DGZS8e.png"> </p>
<p> <img data-src="https://s3.ax1x.com/2020/11/22/DGZ9vd.png"> </p>
<p> <img data-src="https://s3.ax1x.com/2020/11/22/DGZpgH.png"> </p>
<p>最后在浏览器输入<code>公网ip:端口号</code>即可查看结果</p>
<p> <img data-src="https://s3.ax1x.com/2020/11/22/DGZPKA.png"> </p>
]]></content>
      <categories>
        <category>Hadoop</category>
      </categories>
      <tags>
        <tag>Hadoop</tag>
        <tag>Java</tag>
        <tag>ssh</tag>
      </tags>
  </entry>
  <entry>
    <title>Notes</title>
    <url>/2019/09/15/Notes/</url>
    <content><![CDATA[<h1 id="大杂烩笔记"><a href="#大杂烩笔记" class="headerlink" title="大杂烩笔记"></a>大杂烩笔记</h1><a id="more"></a>

<h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><h3 id="添加个人账户"><a href="#添加个人账户" class="headerlink" title="添加个人账户"></a>添加个人账户</h3><ul>
<li><p><code>sudo adduser tt</code> </p>
<p>它选项按默认即可，账户即添加成功</p>
</li>
<li><p><code>su ozh</code><br>输入密码后即可切换到新创建的账户</p>
</li>
<li><p><code>sudo cat /etc/passwd </code></p>
<p>最后面几行为可用账户</p>
</li>
<li><p><code>who </code></p>
<p>可查看当前登录的用户</p>
</li>
<li><p><code>sudo userdel -r tt</code></p>
<p>删除ozh用户，可能删除不完全关联的文件</p>
</li>
</ul>
<h3 id="给用户添加sudo权限"><a href="#给用户添加sudo权限" class="headerlink" title="给用户添加sudo权限"></a>给用户添加sudo权限</h3><ul>
<li><p>方法一</p>
<p><code>sudo vi etc/sudoers </code></p>
<p>找到这一 行：“root ALL=(ALL) ALL”在起下面添加”tt ALL=(ALL) ALL”</p>
</li>
<li><p>方法二</p>
<p><code>sudo usermod -a -G sudo tt</code>  </p>
</li>
</ul>
<p>修改后的结果可以查看/etc/group，可以看到sudo这一栏中包含tt </p>
<h3 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h3><ul>
<li><p><code>sudo passwd tt</code></p>
<p>修改用户tt的密码</p>
</li>
</ul>
<h3 id="tar压缩解压"><a href="#tar压缩解压" class="headerlink" title="tar压缩解压"></a>tar压缩解压</h3><ul>
<li><p><code>tar -czvf  1.tar 1</code> </p>
<p>压缩当前目录下1文件，压缩后的名字为1.tar</p>
<p><strong>如果压缩的文件指定目录的话，目录路径也会被压缩进去</strong></p>
</li>
<li><p><code>tar -xzvf  1.tar</code></p>
<p>解压1.tar压缩包</p>
</li>
</ul>
<h3 id="目录权限查看和修改"><a href="#目录权限查看和修改" class="headerlink" title="目录权限查看和修改"></a>目录权限查看和修改</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo chmod -R 777 tt</span><br><span class="line"></span><br><span class="line">-R 是指级联应用到目录里的所有子目录和文件</span><br><span class="line"></span><br><span class="line">777 是所有用户都拥有最高权限</span><br><span class="line"></span><br><span class="line">权限数字对应权限组说明：</span><br><span class="line"></span><br><span class="line">总共分为4部分</span><br><span class="line"></span><br><span class="line">【文件或文件夹】【owner权限】【group权限】【others权限】</span><br><span class="line"></span><br><span class="line">【文件是-，文件夹是d】【r&#x2F;w&#x2F;x相加】【r&#x2F;w&#x2F;x相加】【r&#x2F;w&#x2F;x相加】</span><br><span class="line"></span><br><span class="line">Linux档案的基本权限就有九个，分别是owner&#x2F;group&#x2F;others三种身份各有自己的read&#x2F;write&#x2F;execute权限。</span><br><span class="line"></span><br><span class="line">r 读权限read 4</span><br><span class="line"></span><br><span class="line">w 写权限write 2</span><br><span class="line"></span><br><span class="line">x 操作权限execute 1</span><br><span class="line"></span><br><span class="line">-表示相应的权限还没有被授予</span><br><span class="line"></span><br><span class="line">-rw------- (600) 只有所有者才有读和写的权限</span><br><span class="line"></span><br><span class="line">-rw-r--r-- (644) 只有所有者才有读和写的权限，组群和其他人只有读的权限</span><br><span class="line"></span><br><span class="line">-rwx------ (700) 只有所有者才有读，写，执行的权限</span><br><span class="line"></span><br><span class="line">-rwxr-xr-x (755) 只有所有者才有读，写，执行的权限，组群和其他人只有读和执行的权限</span><br><span class="line"></span><br><span class="line">-rwx--x--x (711) 只有所有者才有读，写，执行的权限，组群和其他人只有执行的权限</span><br><span class="line"></span><br><span class="line">-rw-rw-rw- (666) 每个人都有读写的权限</span><br><span class="line"></span><br><span class="line">-rwxrwxrwx (777) 每个人都有读写和执行的权限</span><br></pre></td></tr></table></figure>



<h3 id="查看当前操作系统等信息"><a href="#查看当前操作系统等信息" class="headerlink" title="查看当前操作系统等信息"></a>查看当前操作系统等信息</h3><ul>
<li><p>查看当前操作系统版本信息</p>
<p><code>lsb_release -a</code></p>
<p><code> cat /etc/lsb-release</code></p>
<p><code> cat /etc/issue</code></p>
</li>
<li><p>查看当前操作系统内核信息 </p>
<p><code>uname -a</code></p>
</li>
<li><p>查看CPU信息：<br><code>grep name /proc/cpuinfo</code><br><code>lscpu</code> </p>
</li>
<li><p>查看内存</p>
<p><code>free -m</code></p>
</li>
<li><p>查看文件占用内存</p>
<p><code>du -sh *</code></p>
</li>
<li><p>查看硬盘信息 </p>
<p><code> df -h</code></p>
<p><code>sudo fdisk -l</code></p>
</li>
<li><p>查看pci总线</p>
<p><code>lspci #没有的话安装pciutils</code> </p>
</li>
<li><p>查看GPU型号</p>
<p><code>lspci | grep -i nvidia</code></p>
</li>
<li><p>查看NVIDIA驱动版本</p>
<p><code>sudo dpkg --list | grep nvidia-*</code></p>
<p><code>cat /proc/driver/nvidia/version</code></p>
</li>
</ul>
<h3 id="查看进程和端口"><a href="#查看进程和端口" class="headerlink" title="查看进程和端口"></a>查看进程和端口</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">端口是 Linux 系统上特定进程之间逻辑连接的标识，包括物理端口和软件端口。由于 Linux 操作系统是一个软件，因此本文只讨论软件端口。软件端口始终与主机的 IP 地址和相关的通信协议相关联，因此端口常用于区分应用程序。大部分涉及到网络的服务都必须打开一个套接字来监听传入的网络请求，而每个服务都使用一个独立的套接字。</span><br><span class="line"></span><br><span class="line">套接字是和 IP 地址、软件端口和协议结合起来使用的，而端口号对传输控制协议（TCP）和用户数据报协议（UDP）协议都适用，TCP 和 UDP 都可以使用 0 到 65535 之间的端口号进行通信。</span><br><span class="line"></span><br><span class="line">以下是端口分配类别：</span><br><span class="line"></span><br><span class="line">0 - 1023： 常用端口和系统端口</span><br><span class="line">1024 - 49151： 软件的注册端口</span><br><span class="line">49152 - 65535： 动态端口或私有端口</span><br><span class="line"></span><br><span class="line">ps -aux | grep java #查看正在运行的java进程的所有状态</span><br><span class="line"></span><br><span class="line">netstat -an | grep 9000 #查看9000端口是否被占用（listen占用）</span><br><span class="line"></span><br><span class="line">netstat -tunlp|grep 9000 #查看9000端口被什么进程占用</span><br><span class="line"></span><br><span class="line">kill -9 PID #杀死占用9000端口进程的PID -9强迫</span><br></pre></td></tr></table></figure>



<h3 id="Screen"><a href="#Screen" class="headerlink" title="Screen"></a>Screen</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">screen -S xxx #创建一个screen，按住Ctrl，依次按a+d暂离会话，依次按a+c创建子会话，a+2,切换会话</span><br><span class="line"></span><br><span class="line">screen -ls #查看所有创建会话</span><br><span class="line"></span><br><span class="line">screen -r xxx #恢复会话</span><br><span class="line"></span><br><span class="line">有时在恢复screen时会出现There is no screen to be resumed matching ****，screen -d xxx</span><br><span class="line"></span><br><span class="line">exit退出会话</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="配置文件profile和-bashrc"><a href="#配置文件profile和-bashrc" class="headerlink" title="配置文件profile和.bashrc"></a>配置文件profile和.bashrc</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">profile 用于登录， bashrc 用于交互。 &#x2F;etc&#x2F;profile &#x2F;etc&#x2F;bash.bashrc 用于所有用户 ~&#x2F;.profile ~&#x2F;.bashrc 用于用户自己的配置</span><br><span class="line"></span><br><span class="line">遇见问题：linux下如何设置环境变量</span><br><span class="line"></span><br><span class="line">假如现在安装JDK，需要配置环境变量，然后执行如下命令：</span><br><span class="line">export JAVA_HOME&#x3D;&#x2F;xxx&#x2F;xxx</span><br><span class="line">export PATH&#x3D;$PATH:$JAVA_HOME&#x2F;bin</span><br><span class="line">export CLASSPATH&#x3D;$JAVA_HOME&#x2F;lib:$JAVA_HOME&#x2F;jre&#x2F;lib</span><br><span class="line"></span><br><span class="line">如果想要让环境变量不是临时的，那么上面的export 命令需要写入配置文件，</span><br><span class="line">1.写入 &#x2F;etc&#x2F;profile</span><br><span class="line">2.或写入~&#x2F;.profile</span><br><span class="line">3.或写入 ~&#x2F;.bashrc</span><br></pre></td></tr></table></figure>



<p><a href="https://www.cnblogs.com/qcloud1001/p/9273549.html">https://www.cnblogs.com/qcloud1001/p/9273549.html</a></p>
<h3 id="apt包管理器"><a href="#apt包管理器" class="headerlink" title="apt包管理器"></a>apt包管理器</h3><ul>
<li><p>想要安装的文件xxx的网络资源全程</p>
<p><code>apt search xxx </code></p>
</li>
<li><p>卸载xxx</p>
<p><code>apt remove XXX</code></p>
</li>
<li><p>查询已安装包 sudo apt remove –purge dock.io//针对性删除</p>
<p><code>dpkg -l | grep xxx</code></p>
</li>
<li><p>ifconfig找不到</p>
<p><code>sudo apt install net-tools</code></p>
</li>
<li><p>安装fuser</p>
<p><code>apt-get install  psmisc </code></p>
</li>
</ul>
<h3 id="查看防火墙状态"><a href="#查看防火墙状态" class="headerlink" title="查看防火墙状态"></a>查看防火墙状态</h3><ul>
<li><code>sudo ufw status</code></li>
</ul>
<h3 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h3><ul>
<li><code>sudo ufw enable/disable</code></li>
</ul>
<h3 id="Hostname"><a href="#Hostname" class="headerlink" title="Hostname"></a>Hostname</h3><ul>
<li><p>临时修改主机名</p>
<p><code>hostname xxx </code> </p>
</li>
<li><p>永久修改主机名</p>
<p><code>hostnamectl set-hostname xxx</code></p>
</li>
</ul>
<h3 id="GIT"><a href="#GIT" class="headerlink" title="GIT"></a>GIT</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git push origin（远程库名称）xx:xx(本地分支：远程分支) </span><br><span class="line"></span><br><span class="line">git pull origin（远程库名称）xx:xx(远程分支：本地分支)</span><br><span class="line"></span><br><span class="line">git merge origin&#x2F;master(将名为origin的远程库的master分支合并到当前分支)</span><br><span class="line"></span><br><span class="line">git clone -b xxx（分支名） xxxx（远程库地址）</span><br><span class="line"></span><br><span class="line">git stash 暂时丢掉</span><br><span class="line"></span><br><span class="line">git stash pop</span><br></pre></td></tr></table></figure>



<h3 id="conda"><a href="#conda" class="headerlink" title="conda"></a>conda</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda config --set auto_activate_base false #退出默认base</span><br><span class="line"></span><br><span class="line">conda create -n xxx python&#x3D;&#x3D;3.x #创建环境</span><br><span class="line"></span><br><span class="line">conda env remove -n env-name #删除指定环境</span><br><span class="line"></span><br><span class="line">conda env list #列出环境列表</span><br><span class="line"></span><br><span class="line">conda install xxx #安装xxx包</span><br><span class="line"></span><br><span class="line">conda remove xxx #删除指定包</span><br><span class="line"></span><br><span class="line">conda update package-name #更新指定包</span><br><span class="line"></span><br><span class="line">conda list #列出所有包</span><br><span class="line"></span><br><span class="line">conda search xxx #搜索指定包</span><br><span class="line"></span><br><span class="line">conda activate  xxx #进入某个环境</span><br><span class="line"></span><br><span class="line">conda deactivate #退出</span><br></pre></td></tr></table></figure>



<h3 id="添加conda源"><a href="#添加conda源" class="headerlink" title="添加conda源"></a>添加conda源</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda config --show 显示默认配置</span><br><span class="line"></span><br><span class="line">conda config --add channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;cloud&#x2F;msys2&#x2F;</span><br><span class="line"></span><br><span class="line">conda config --add channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;cloud&#x2F;conda-forge&#x2F;</span><br><span class="line"></span><br><span class="line">conda config --add channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;pkgs&#x2F;free&#x2F;</span><br><span class="line"></span><br><span class="line">conda config --set show_channel_urls yes</span><br><span class="line"></span><br><span class="line">conda config --remove-key channels 还原默认源</span><br></pre></td></tr></table></figure>



<h3 id="conda安装过程出现PackagesNotFoundError"><a href="#conda安装过程出现PackagesNotFoundError" class="headerlink" title="conda安装过程出现PackagesNotFoundError"></a>conda安装过程出现PackagesNotFoundError</h3><ul>
<li><p><code>anaconda search -t conda torch</code></p>
</li>
<li><p><code>conda install -c https://conda.anaconda.org/  搜索结果 +空格+torch</code> <a href="https://blog.csdn.net/webmater2320/article/details/105230350/">参考</a></p>
</li>
</ul>
<h3 id="pip"><a href="#pip" class="headerlink" title="pip"></a>pip</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip3 install pyqt5 -i https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple  指定清华源</span><br><span class="line"></span><br><span class="line">pip3 --default-timeout&#x3D;1000 install -U matplotlib 让延迟检测时间变长</span><br><span class="line"></span><br><span class="line">pip3 --default-timeout&#x3D;1000  install -U pyqt5 -i   https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple </span><br></pre></td></tr></table></figure>



<h3 id="Ubuntu18-04下-sudo-pip与sudo-pip3-修改路径指向"><a href="#Ubuntu18-04下-sudo-pip与sudo-pip3-修改路径指向" class="headerlink" title="Ubuntu18.04下 sudo pip与sudo pip3 修改路径指向"></a><a href="https://blog.csdn.net/e_xiaoyu/article/details/102846313">Ubuntu18.04下 sudo pip与sudo pip3 修改路径指向</a></h3><h3 id="解决pip下载速度慢"><a href="#解决pip下载速度慢" class="headerlink" title="解决pip下载速度慢"></a><a href="https://blog.csdn.net/fatfatmomo/article/details/81184119">解决pip下载速度慢</a></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Linux下，修改 ~&#x2F;.pip&#x2F;pip.conf (没有就创建一个文件夹及文件。文件夹要加“.”，表示是隐藏文件夹)</span><br><span class="line"></span><br><span class="line">[global]</span><br><span class="line">index-url &#x3D; https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple</span><br><span class="line"></span><br><span class="line">[install]</span><br><span class="line">trusted-host&#x3D;mirrors.aliyun.com</span><br></pre></td></tr></table></figure>



<h3 id="Tmux"><a href="#Tmux" class="headerlink" title="Tmux"></a><a href="http://www.ruanyifeng.com/blog/2019/10/tmux.html">Tmux</a></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">会话 session 窗口 window 窗格 </span><br><span class="line"></span><br><span class="line">tmux new -s new-session #创建新会话</span><br><span class="line"></span><br><span class="line">tmux detach或者按下ctrl+b d 分离会话</span><br><span class="line"></span><br><span class="line">tmux attach -t name-session#恢复会话</span><br><span class="line"></span><br><span class="line">tmux switch -t name-session #切换会话</span><br><span class="line"></span><br><span class="line">tmux ls #显示所有会话</span><br><span class="line"></span><br><span class="line">tmux kill-session -t  name-session #杀死会话</span><br><span class="line"></span><br><span class="line">tmux rename -t name-session new-session-name # 重命名</span><br></pre></td></tr></table></figure>



<h3 id="高级tmux"><a href="#高级tmux" class="headerlink" title="高级tmux"></a>高级tmux</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tmux split-window # 划分上下窗格</span><br><span class="line"></span><br><span class="line">tmux split -h # 划分左右窗格 </span><br><span class="line"></span><br><span class="line">tmux select-pane -U -D -L -R #上下左右切换鼠标光标</span><br><span class="line"></span><br><span class="line">tmux swap-pane -U -D -L -R # 上下左右切换窗格位置</span><br></pre></td></tr></table></figure>



<h3 id="tmux-快捷键"><a href="#tmux-快捷键" class="headerlink" title="tmux 快捷键"></a>tmux 快捷键</h3><ul>
<li><code>Ctrl+b d</code>：分离当前会话。</li>
<li><code>Ctrl+b s</code>：列出所有会话。</li>
<li><code>Ctrl+b %</code>：划分左右两个窗格。</li>
<li><code>Ctrl+b &quot;</code>：划分上下两个窗格。</li>
<li><code>Ctrl+b &lt;arrow key&gt;</code>：光标切换到其他窗格。<code>&lt;arrow key&gt;</code>是指向要切换到的窗格的方向键，比如切换到下方窗格，就按方向键<code>↓</code>。</li>
<li><code>Ctrl+b x</code>：关闭当前窗格。</li>
<li><code>Ctrl+b z</code>：当前窗格全屏显示，再使用一次会变回原来大小。</li>
<li><code>Ctrl+b q</code>：显示窗格编号。</li>
<li><code>Ctrl+b !</code>：将当前窗格拆分为一个独立窗口。</li>
<li><code>Ctrl+b c</code>：创建一个新窗口，状态栏会显示多个窗口的信息。</li>
<li><code>Ctrl+b &lt;number&gt;</code>：切换到指定编号的窗口，其中的<code>&lt;number&gt;</code>是状态栏上的窗口编号。</li>
<li><code>Ctrl+b w</code>：从列表中选择窗口。</li>
<li><code>Ctrl+b ,</code>：窗口重命名。</li>
<li><code>Ctrl+b $</code>：重命名当前会话。</li>
</ul>
<h3 id="tmux流程"><a href="#tmux流程" class="headerlink" title="tmux流程"></a>tmux流程</h3><p>tmux 新建一个会话， ctrl+b $ 重命名当前会话， ctrl+b % 左右划分 窗格 ，ctrl+b “ 上下划分窗格， ctrl+b c 新建窗口，ctrl+b ， 重命名窗口， ctrl+b d 离开当前会话，tmux ls 显示所有会话，tmux attach -t 会话名，ctrl+b x 关闭当前窗格 ctrl+b w列表选择会话、窗口、窗格。</p>
<h3 id="Vim高级用法"><a href="#Vim高级用法" class="headerlink" title="Vim高级用法"></a>Vim高级用法</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1)一些常用的Vim配置，在~&#x2F;.vimrc中</span><br><span class="line"></span><br><span class="line">syntax on    支持语法高亮</span><br><span class="line"></span><br><span class="line">set nu      显示行号</span><br><span class="line">set nonu    不显示行号</span><br><span class="line"></span><br><span class="line">set ai      设置自动缩进</span><br><span class="line"></span><br><span class="line">set shiftwidth&#x3D;4  设置自动缩进 4 个空格, 当然要设自动缩进先.</span><br><span class="line"></span><br><span class="line">set sts&#x3D;4      即设置 softtabstop 为 4. 输入 tab 后就跳了 4 格.</span><br><span class="line"></span><br><span class="line">set tabstop&#x3D;4    实际的 tab 即为 4 个空格, 而不是缺省的 8 个.</span><br><span class="line"></span><br><span class="line">set expandtab    在输入 tab 后, vim 用恰当的空格来填充这个 tab.</span><br><span class="line"></span><br><span class="line">:set hls 打开搜索高亮</span><br><span class="line"></span><br><span class="line">:set nohls 取消搜索高亮 </span><br><span class="line"></span><br><span class="line">:set list ： 显示特殊字符</span><br><span class="line"></span><br><span class="line">:set nolist </span><br><span class="line"></span><br><span class="line">2）查找 </span><br><span class="line"></span><br><span class="line">&#x2F;xxx(?xxx) 表示在整篇文档中搜索匹配xxx的字符串, &#x2F; 表示向下查找, ? 表示向上查找.查找到以后, 再输入 n 查找下一个匹配处, 输入 N 反方向查找.</span><br><span class="line"></span><br><span class="line">3)  移动</span><br><span class="line"></span><br><span class="line">w(e) 移动光标到下一个单词. b 移动光标到上一个单词.</span><br><span class="line">0 移动光标到本行最开头. ^ 移动光标到本行最开头的字符处. $ 移动光标到本行结尾处.</span><br><span class="line">向前向后翻页 ctrl+f 和 ctrl+b.</span><br><span class="line">% 跳转到相配对的括号.</span><br><span class="line">  G(shift+g)   - go to the last line in the vim editor (文件的末尾)  1G - goto line number 1(文件的开始) 20G - goto line number 20</span><br></pre></td></tr></table></figure>





<h3 id="显卡，显卡驱动-nvcc-cuda-driver-cudatoolkit-cudnn"><a href="#显卡，显卡驱动-nvcc-cuda-driver-cudatoolkit-cudnn" class="headerlink" title="显卡，显卡驱动,nvcc, cuda driver,cudatoolkit,cudnn"></a><a href="https://zhuanlan.zhihu.com/p/91334380">显卡，显卡驱动,nvcc, cuda driver,cudatoolkit,cudnn</a></h3><p><strong>CUDA Toolkit</strong> 包括 <strong>1.Compiler</strong>: CUDA-C和CUDA-C++编译器<code>NVCC</code>  <strong>2.Tools</strong>: 提供一些像<code>profiler</code>,<code>debuggers</code>等工具  <strong>3.Libraries</strong>: 下面列出的部分科学库和实用程序库  <strong>4.CUDA Samples</strong>: 演示如何使用各种CUDA和library API的代码示例  <strong>5.CUDA Driver</strong>: 运行CUDA应用程序需要系统至少有一个<strong>具有CUDA功能的GPU</strong>和<strong>与CUDA工具包兼容的驱动程序</strong>  </p>
<p><img data-src="https://pic1.zhimg.com/80/v2-fc8c720a858b6c2583b09f0228c4b3e0_720w.jpg" alt="img"></p>
<p>而显卡GPU driver功能上等价于cuda toolkit里面的cuda driver。但cuda有两个API Runtime API和Driver API ，这两个API都有对应的CUDA版本 ， </p>
<p>用于支持<strong>driver API</strong>的必要文件(如<code>libcuda.so</code>)是由<strong>GPU driver installer</strong>安装的。<code>nvidia-smi</code>就属于这一类API。  </p>
<p>用于支持<strong>runtime API</strong>的必要文件(如<code>libcudart.so</code>以及<code>nvcc</code>)是由<strong>CUDA Toolkit installer</strong>安装的。（<strong>CUDA Toolkit Installer有时可能会集成了GPU driver Installer</strong>）。<code>nvcc</code>是与CUDA Toolkit一起安装的CUDA compiler-driver tool，它只知道它自身构建时的CUDA runtime版本。它不知道安装了什么版本的GPU driver，甚至不知道是否安装了GPU driver。  </p>
<p>如果driver API和runtime API的CUDA版本不一致可能是因为使用的是单独的（显卡）GPU driver installer，而不是CUDA Toolkit installer里的GPU driver installer。 </p>
<p> <img data-src="https://pic3.zhimg.com/80/v2-a1f1d9f699697a8e05979abf749fbeae_720w.jpg" alt="img"> </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">检测pytorch在当前cuda版本中是可用</span><br><span class="line">import torch </span><br><span class="line">print(torch.cuda.is_available())</span><br><span class="line"></span><br><span class="line">torch.cuda.get_device_name(0)</span><br></pre></td></tr></table></figure>



<h2 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h2><h3 id="Docker-教程"><a href="#Docker-教程" class="headerlink" title="Docker 教程"></a><a href="https://www.cnblogs.com/qcloud1001/p/9273549.html">Docker</a> 教程</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker image ls  \# 列出本机的所有 image 文件 </span><br><span class="line"></span><br><span class="line">docker image rm [image_name] \# 删除 image文件 </span><br><span class="line"></span><br><span class="line">docker container run [image_name]  会从一个镜像文件中生成一个容器实例,并且运行它</span><br><span class="line"></span><br><span class="line">docker container run命令具有自动抓取 image 文件的功能。如果发现本地没有指定的 image 文件，就会从仓库自动抓取。docker image pull命令并不是必需的步骤。 </span><br><span class="line"></span><br><span class="line"> docker container ls  # 查看当前运行容器 </span><br><span class="line"></span><br><span class="line"> docker container ls --all   \# 列出本机所有容器，包括终止运行的容器 </span><br><span class="line"></span><br><span class="line"> 终止运行的容器文件依然会占用硬盘空间,可以使用docker container rm [container_id]命令删除 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">以下命令使用 ubuntu 镜像**启动**一个容器，参数为以命令行模式进入该容器：</span><br><span class="line"></span><br><span class="line">**docker run -it ubuntu &#x2F;bin&#x2F;bash**</span><br><span class="line"></span><br><span class="line">-it : 容器的shell会映射到当前本地的shell,你在本机窗口输入的命令会传入到容器中 </span><br><span class="line"></span><br><span class="line">**查看**所有的容器（**包括已停止**的）命令如下：</span><br><span class="line"></span><br><span class="line">**docker ps -a**</span><br><span class="line"></span><br><span class="line">使用 **docker start** **重启一个已停止**的容器：</span><br><span class="line"></span><br><span class="line">**docker start container_id**</span><br><span class="line"></span><br><span class="line">希望 docker 的服务是在**后台运行**的，我们可以过 **-d** 指定容器的运行模式。</span><br><span class="line"></span><br><span class="line">**docker run -itd --name ubuntu-test ubuntu &#x2F;bin&#x2F;bash**</span><br><span class="line"></span><br><span class="line"> 加了 **-d** 参数默认不会进入容器，想要进入容器需要使用指令 **docker exec** </span><br><span class="line"></span><br><span class="line"> **停止容器** </span><br><span class="line"></span><br><span class="line">**docker stop &lt;容器 ID&gt;**</span><br><span class="line"></span><br><span class="line">在使用 **-d** 参数时，容器启动后会进入后台。此时想要进入容器，可以通过以下指令进入：</span><br><span class="line"></span><br><span class="line">- **docker attach**(粘贴到当前终端)</span><br><span class="line">- **docker exec**：推荐大家使用 docker exec 命令，因为此退出容器终端，不会导致容器的停止。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">如果要**导出本地某个容器**，可以使用 **docker export** 命令。</span><br><span class="line"></span><br><span class="line"> **docker export 1e560fca3906 &gt; ubuntu.tar**  这样将导出容器快照到本地文件 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">可以使用 **docker import** 从容器快照文件中再导入为镜像，以下实例将快照文件 ubuntu.tar 导入到镜像 test&#x2F;ubuntu:v1:</span><br><span class="line"></span><br><span class="line"> cat docker&#x2F;ubuntu.tar | **docker import - test&#x2F;ubuntu:v1**</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">下面的命令可以**清理掉所有处于终止状态的容器**。</span><br><span class="line"></span><br><span class="line">**docker container prune**</span><br></pre></td></tr></table></figure>



<h2 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h2><h3 id="Ubuntu-sudo-update与upgrade的作用及区别"><a href="#Ubuntu-sudo-update与upgrade的作用及区别" class="headerlink" title="Ubuntu sudo update与upgrade的作用及区别"></a><a href="https://blog.csdn.net/beckeyloveyou/article/details/51352426">Ubuntu sudo update与upgrade的作用及区别</a></h3><h3 id="Ubuntu18-04下更改apt源为阿里云源"><a href="#Ubuntu18-04下更改apt源为阿里云源" class="headerlink" title="Ubuntu18.04下更改apt源为阿里云源"></a><a href="https://blog.csdn.net/zhangjiahao14/article/details/80554616">Ubuntu18.04下更改apt源为阿里云源</a></h3><h3 id="解决ubuntu分辨率问题"><a href="#解决ubuntu分辨率问题" class="headerlink" title="解决ubuntu分辨率问题"></a><a href="https://blog.csdn.net/simmonloyld/article/details/87393775">解决ubuntu分辨率问题</a></h3><h3 id="Ubuntu16-04桌面突然卡住"><a href="#Ubuntu16-04桌面突然卡住" class="headerlink" title="Ubuntu16.04桌面突然卡住"></a><a href="https://blog.csdn.net/hautxuhaihu/article/details/78924926">Ubuntu16.04桌面突然卡住</a></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(1)Ubuntu有6个tty终端，按住Ctrl+Alt+F1可以进入tty1终端，（同理Ctrl+Alt+F2，F3等可以进入其他的tty1终端，这里我们只需要进入一个tty终端就能解决问题）。</span><br><span class="line"></span><br><span class="line">(2)进入tty终端后先输入你的用户名和密码登录。</span><br><span class="line"></span><br><span class="line">(3)执行命令注销桌面重新登陆：</span><br><span class="line"></span><br><span class="line">sudo pkill Xorg</span><br></pre></td></tr></table></figure>



<h3 id="安装detectron包"><a href="#安装detectron包" class="headerlink" title="安装detectron包"></a>安装detectron包</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip3 install detectron2&#x3D;&#x3D;0.1.3-f  </span><br><span class="line"></span><br><span class="line">https:&#x2F;&#x2F;dl.fbaipublicfiles.com&#x2F;detectron2&#x2F;wheels&#x2F;cu101&#x2F;torch1.5&#x2F;index.html </span><br></pre></td></tr></table></figure>



<h3 id="curl待学…"><a href="#curl待学…" class="headerlink" title="curl待学…"></a>curl待学…</h3>]]></content>
      <categories>
        <category>Notes</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>ubuntu</tag>
        <tag>docker</tag>
      </tags>
  </entry>
</search>
